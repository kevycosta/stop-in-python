datasource db {
  // could be postgresql or mysql
  provider = "sqlite"
  url      = "file:dev.db"
}

generator db {
  provider             = "prisma-client-py"
  interface            = "sync"
  recursive_type_depth = 5
}

model mdUsers {
  user_id       String @id @default(cuid())
  user_name     String
  user_login    String
  user_password String

  dcQuestionsAnswers dcQuestionsAnswers[]
  dcRoomStatus       dcRoomStatus[]
  mdRooms            mdRooms[]
}

model mdRooms {
  room_id    Int    @id @default(autoincrement())
  user_admin String

  dcQuestionsAnswers    dcQuestionsAnswers[]
  mdQuestions           mdQuestions[]
  dcRoomRound           dcRoomRound[]
  userAdm               mdUsers                 @relation(fields: [user_admin], references: [user_id])
  dcAnswersTransactions dcAnswersTransactions[]
}

model dcRoomStatus {
  status_id  Int    @id @default(autoincrement())
  room_id    Int
  user_id    String
  user_score Int    @default(0)

  user mdUsers @relation(fields: [user_id], references: [user_id])
}

model dcRoomRound {
  room_id       Int @id
  current_round Int @default(0)

  room mdRooms @relation(fields: [room_id], references: [room_id])
}

model mdQuestions {
  question_id    Int    @id @default(autoincrement())
  room_id        Int
  question_title String

  rooms                 mdRooms                 @relation(fields: [room_id], references: [room_id])
  dcQuestionsAnswers    dcQuestionsAnswers[]
  dcAnswersTransactions dcAnswersTransactions[]
}

model dcQuestionsAnswers {
  answer_transaction_id Int      @id @default(autoincrement())
  question_id           Int
  room_id               Int
  round                 Int
  letter_in_round       String
  user_id               String
  question_value        String?
  transaction_time      DateTime @default(now())

  user     mdUsers     @relation(fields: [user_id], references: [user_id])
  rooms    mdRooms     @relation(fields: [room_id], references: [room_id])
  question mdQuestions @relation(fields: [question_id], references: [question_id])
}

model dcAnswersTransactions {
  transaction_id        Int      @id @default(autoincrement())
  question_id           Int
  room_id               Int
  round                 Int
  author_answer_user_id String
  author_vote_user_id   String
  question_value        String
  vote                  Int      @default(1)
  transaction_time      DateTime @default(now())

  rooms    mdRooms     @relation(fields: [room_id], references: [room_id])
  question mdQuestions @relation(fields: [question_id], references: [question_id])
}
